# Copyright 2025 Code17 GmbH
#
# this file is licensed under the elastic license 2.0 (elv2).
# refer to the license.txt file in the root of the repository
# for details.
#

[build-system]
requires = ["wheel~=0.43.0", "hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "getml"
description = "Python API for getML"
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Elastic License 2.0 (ELv2)"}
authors = [{name="getML", email="getml@getml.com"},]
keywords = ["AutoML", "feature learning", "feature engineering"]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Telecommunications Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Healthcare Industry",
    "Operating System :: OS Independent",
]
dependencies = [
    "pandas>=2.0.3,<2.3",
    "pyarrow>=16.0,<20.0",
    "numpy>=1.24.4,<2.3",
    "jinja2~=3.1.0",
    "rich~=13.0",
    "typing-extensions~=4.0",
]

[project.urls]
"Hompage" = "https://getml.com"
"Documentation" = "https://getml.com/latest"
"Bug Tracker" = "https://github.com/getml/getml-community/issues"
"Download" = "https://getml.com/latest/install"
"Source Code" = "https://github.com/getml/getml-community"

[project.optional-dependencies]
scipy = ["scipy"]
pyspark = ["pyspark"]
jupyter = ["jupyterlab", "ipywidgets"]

[dependency-groups]
dev = [
  "hatchling",
  "keyring",
  "keyrings.google-artifactregistry-auth",
  "pyright",
  "pytest",
  "ruff",
]

[tool.hatch.version]
source = "code"
path = "getml/version.py"
expression = "__version__"

[tool.hatch.envs.test]
installer = "uv"
dependencies = [
  "pytest",
  "pytest-xdist",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.build]
include = [
    "getml",
    "VERSION",
    "getml/utilities/templates/*.jinja2",
]
exclude = ["tests"]

[tool.hatch.build.target.wheel]
include = [".getML/**/*"]

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
select = ["PL", "UP", "CPY001"]
ignore = [
  # Allow over
  "A003",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow for string literals in exceptions
  "EM",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915", "PLR2004", "PLR0124"
]
exclude = ["tests/**/*",]
extend-select = ["I"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[tool.pytest.ini_options]
markers = [
    "getml_engine: tests that rely on a running getML process (processes can automatically be launched and shutdown on linux)",
    "slow: integration tests deemed time-intensive to execute."
]
