Example 11: Saving and loading data
------------------------------------

For a full working example, please refer to :ref:`example11_saving_data.py`.

Loading and saving is just as easy as loading and saving models:

We assume that you have two data frames, called PERIPHERAL and POPULATION.

::

    peripheral_on_engine = engine.DataFrame(
        name="PERIPHERAL",
        numerical=["column_01"],
        join_keys=["join_key"],
        time_stamps=["time_stamp"]
    )

    population_on_engine = engine.DataFrame(
        name="POPULATION",
        numerical=["column_01"],
        join_keys=["join_key"],
        time_stamps=["time_stamp"],
        targets=["targets"]
    )

Here is how you save your data:

::

    engine.set_project("MyProject")

    peripheral_on_engine.save()

    population_on_engine.save()

Here is how you reload it:

::

    engine.set_project("MyProject")

    peripheral_on_engine2 = engine.DataFrame("PERIPHERAL").load()

    population_on_engine2 = engine.DataFrame("POPULATION").load()

If you know that a particular data frame is already loaded in the AutoSQL engine (a good way to find out is to check the AutoSQL Monitor), but you want to handle it in Python, you do not have to reload it. Calling *.refresh()* will do the trick:

::

    peripheral_on_engine3 = engine.DataFrame("PERIPHERAL").refresh()

    population_on_engine3 = engine.DataFrame("POPULATION").refresh()

This also enables you to interact between different programming languages when handling data frames.
